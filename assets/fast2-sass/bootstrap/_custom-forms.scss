@use "sass:list";

.rb-group {
  & > div {
    display: inline-block;
  }
}

.cb-inline {
  margin-bottom: px2rem(20);

  & > div > .input-slot {
    .sh-input-wrapper {
      min-height: 1.25rem;
      display: inline-flex;
      margin: 0 1rem 0.5rem 0;
      position: relative;
      padding: 0 0 0 0;

      .form-group {
        margin-bottom: 0;
      }
    }
  }
}

.cb-stacked {
  margin-bottom: px2rem(20);
  .form-group {
    margin: 0;

    .col-form-label {
      display: none;
    }
  }
}

.custom-control {
  margin-bottom: px2rem(8);
  min-height: $custom-control-height;

  .simple & {
    margin: 0;
    padding: 0;
  }

  .custom-control-label {
    padding-top: 0;
    padding-left: px2rem(17);

    .simple & {
      padding-left: 0;
      width: ($custom-control-gutter + $custom-control-indicator-size);
    }

    // Background-color and (when enabled) gradient
    &::before {
      position: absolute;
      top: ($custom-control-height - $custom-control-indicator-size) * 0.5;
      left: -($custom-control-gutter + $custom-control-indicator-size);
      display: block;
      width: $custom-control-indicator-size;
      height: $custom-control-indicator-size;
      pointer-events: none;
      content: "";
      background-color: $custom-control-indicator-bg;
      border: $custom-control-indicator-border-color solid $custom-control-indicator-border-width;
      @include box-shadow($custom-control-indicator-box-shadow);

      .simple & {
        left: 0;
      }
    }

    // Foreground (icon)
    &::after {
      position: absolute;
      top: ($custom-control-height - $custom-control-indicator-size) * 0.5;
      left: -($custom-control-gutter + $custom-control-indicator-size);
      display: block;
      width: $custom-control-indicator-size;
      height: $custom-control-indicator-size;
      content: "";
      background: no-repeat list.slash(50%, $custom-control-indicator-bg-size);

      .simple & {
        left: 0;
      }
    }
  }

  &:hover {
    .custom-control-input:not(:disabled):not(.disabled) ~ .custom-control-label::before {
      border-color: $gray-600;
    }
  }

  &.custom-checkbox {
    .fs-14 & {
      font-size: px2rem(14) !important;
      margin-bottom: -2px;
      line-height: 1.6;
    }

    .custom-control-label::before {
      @include border-radius($custom-checkbox-indicator-border-radius);
    }

    .custom-control-input:indeterminate ~ .custom-control-label {
      &::before {
        border-color: $custom-checkbox-indicator-indeterminate-border-color;
        @include gradient-bg($custom-checkbox-indicator-indeterminate-bg);
        @include box-shadow($custom-checkbox-indicator-indeterminate-box-shadow);
      }
      &::after {
        background-image: $custom-checkbox-indicator-icon-indeterminate;
      }
    }

    .custom-control-input:disabled {
      &:checked ~ .custom-control-label::before {
        background-color: $custom-control-indicator-checked-disabled-bg;
      }
      &:indeterminate ~ .custom-control-label::before {
        background-color: $custom-control-indicator-checked-disabled-bg;
      }
    }
  }

  // Radios
  //
  // Tweak just a few things for radios.

  &.custom-radio {
    .custom-control-input:checked ~ .custom-control-label {
      &::before {
        background-color: $custom-control-indicator-radio-bg-color;
      }
    }

    .custom-control-input:disabled {
      &:checked ~ .custom-control-label::before {
        background-color: $custom-control-indicator-checked-disabled-bg;
      }
    }
  }
}

.custom-switch {
  padding-left: $custom-switch-width + $custom-control-gutter;

  .custom-control-label {
    .simple & {
      padding-left: 0;
      width: ($custom-switch-width + $custom-control-gutter);
    }

    &::before {
      left: -($custom-switch-width + $custom-control-gutter);
      width: $custom-switch-width;
      pointer-events: all;
      // stylelint-disable-next-line property-blacklist
      border-radius: $custom-switch-indicator-border-radius;
    }

    &::after {
      top: calc(
        #{(($custom-control-height - $custom-control-indicator-size) * 0.5)} + #{$custom-control-indicator-border-width *
          2}
      );
      left: calc(#{- ($custom-switch-width + $custom-control-gutter)} + #{$custom-control-indicator-border-width * 2});
      width: $custom-switch-indicator-size;
      height: $custom-switch-indicator-size;
      background-color: $custom-control-indicator-border-color;
      // stylelint-disable-next-line property-blacklist
      border-radius: $custom-switch-indicator-border-radius;
      @include transition(transform 0.15s ease-in-out, $custom-forms-transition);
    }
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-color: $custom-control-indicator-bg;
      transform: translateX($custom-switch-width - $custom-control-indicator-size);
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
  }
}

.was-validated .custom-control-input:valid ~ .custom-control-label,
.custom-control-input.is-valid ~ .custom-control-label {
  color: $gray-900;
}

.collapse-check-box {
  &-header {
    &__header {
      padding-left: px2rem(5);
      font-weight: 500;
      font-size: 15px;
      line-height: 22px;

      span {
        position: relative;
        left: -14px;
        white-space: nowrap;
      }
    }
    &__main-header {
      .text-truncated {
        flex: 1;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
      }
      .custom-control .custom-control-label {
        font-size: 15px !important;
        line-height: 22px !important;
        width: 100%;
        padding-right: 5px;
      }
    }
  }

  &-header__no-line {
    .collapse-line {
      display: none;
    }
  }
}

.dealer-products {
  .custom-control.custom-checkbox {
    .custom-control-input:disabled {
      & ~ .custom-control-label::before {
        background-color: rgba($gray-500, 0.4);
      }
    }
  }
}
